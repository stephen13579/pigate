# .github/workflows/deploy-mqtt.yml
name: Deploy MQTT Broker & Credential Server

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'pigate/cmd/credentialserver/**'
      - 'pigate/pkg/**'
      - 'pigate/configs/credentialserver-config.toml'

jobs:
  deploy-credentialserver:
    runs-on: [ self-hosted, Windows, pigate-cred ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build Credential Server
        shell: powershell
        working-directory: pigate
        run: go build -o ../credentialserver.exe ./cmd/credentialserver/main.go

      - name: Create service folder
        shell: powershell
        run: |
          $path = 'C:\Services\credentialserver'
          if (-not (Test-Path $path)) {
            New-Item -ItemType Directory -Path $path | Out-Null
          }

      - name: Copy Config and Binary to Service Directory
        run: |
          copy credentialserver.exe C:\Services\credentialserver\
          copy pigate\configs\credentialserver-config.toml C:\Services\credentialserver\

      - name: (Re)Install Credential Server Windows Service
        shell: powershell
        run: |
          $serviceName = "credentialserver"
          $exePath = "C:\Services\credentialserver\credentialserver.exe"
          $args = "-c C:\Services\credentialserver\"
          $binPath = "`"$exePath`" $args"

          # Stop and remove the service if it already exists
          if (Get-Service -Name $serviceName -ErrorAction SilentlyContinue) {
            Write-Host "Service exists â€” removing it..."
            Stop-Service $serviceName -Force -ErrorAction SilentlyContinue
            sc.exe delete $serviceName | Out-Null
            Start-Sleep -Seconds 2
          }

          # Create new service
          New-Service -Name $serviceName `
                      -BinaryPathName $binPath `
                      -DisplayName "Credential Server" `
                      -StartupType Automatic

          # Start it
          Start-Service $serviceName

          Write-Host "Service '$serviceName' (re)installed and started."

